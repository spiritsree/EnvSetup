[core]
	excludesfile = ~/.gitignore
	editor = sublime -n -w
	autocrlf = input
	filemode = true
	logallrefupdates = true
	whitespace = space-before-tab, trailing-space

[user]
	name = 
	email = 

[alias]
	a 		= add --all
	aliases = !git config -l | grep alias
	assume 	= update-index --assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    assumeall = "!git status -s | awk {'print $2'} | xargs git assume"
	br 		= branch
	bra 	= branch -a
	brr 	= branch -r
	brv   	= !git branch --color -v
	ca 		= commit -a
	cl 		= clone
	ci   	= commit
	co   	= checkout
	d 		= diff
	dc 		= diff --cached
	done 	= "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	dr   	= "!f() { git diff "$1"^.."$1"; }; f"
	empty 	= "!git commit -am\"[empty] Initial commit\" --allow-empty"
	f 		= fetch
	gra 	= "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	l 		= log --oneline --max-count=15
	la 		= "!git config -l | grep alias | cut -c 7-"
	lap 	= "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"
	last 	= "!gvim $(git show HEAD --format="" --name-only | grep -e .*md$ | xargs)"
	lasttag = describe --tags --abbrev=0
	lc   	= diff --cached HEAD^
	lds		= log --pretty=format:\"%C(yellow)%h\\ %ad%C(red)%d\\ %C(reset)%s%C(cyan)\\ [%cn]\" --decorate=full --date=short --max-count=20
	lg 		= log --oneline --graph --decorate --max-count 25
	ll   	= log --pretty=format:\"%C(yellow)%h%C(reset)%C(red)%d%C(reset) %s %C(cyan)[%cn]%C(reset)\" --decorate=full --numstat --abbrev-commit --max-count=10
	ls   	= log --pretty=format:\"%C(yellow)%h%C(reset)%C(red)%d%C(reset) %s %C(cyan)[%cn]%C(reset)\" --decorate=full --abbrev-commit --max-count=20
	lt 		= describe --tags --abbrev=0
	new  	= !sh -c 'git log $1@{1}..$1@{0} "$@"'
	newmd 	= "!gvim $(git status -s | awk {'print $2'})"
	ours 	= "!f() { git co --ours $@ && git add $@; }; f" # conflict/merges
	r 		= remote -v
	r1 		= reset HEAD^
    r2 		= reset HEAD^^
	ra 		= remote add
	rao 	= remote add origin
	rau 	= remote add upstream
	rem 	= "!git config -l | grep remote.*url | tail -n +2"
	rh 		= reset --hard
    rh1 	= reset HEAD^ --hard
    rh2 	= reset HEAD^^ --hard
	rso 	= remote show origin
	rsu 	= remote show upstream
	s 		= status
	sa 		= stash apply
	sba 	= "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
	sbu 	= "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"
	sl 		= stash list
	ss 		= stash save
	st 		= status -sb --ignore-submodules=untracked
	theirs 	= "!f() { git co --theirs $@ && git add $@; }; f"
	unassume = update-index --no-assume-unchanged
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	undo 	= "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"
	wl 		= worktree list

[color]
	diff   = auto
	status = auto
	branch = auto
	ui     = auto

[color "diff"]
	meta  = cyan bold
	frag  = magenta bold
	old   = red bold
	new   = green bold
	whitespace = red reverse

[color "branch"]
	current = yellow reverse
	local   = yellow bold
	remote  = cyan bold
	plain   = red bold

[color "status"]
	added     = green bold
	changed   = yellow bold
	untracked = red bold

[apply]
	whitespace = nowarn

[format]
	pretty = %C(yellow)%h%Creset %s %C(red)(%an, %cr)%Creset

[help]
	browser = gitscm

[branch]
	autosetupmerge  = true
	autosetuprebase = always

[diff]
	renames 		= copies
	mnemonicprefix 	= true
	tool			= vimdiff

[difftool]
	prompt = false

[gitflow "prefix"]
	feature 	= feature-
	release 	= release-
	hotfix 		= hotfix-
	support 	= support-
	versiontag 	= v

[push]
	default = current

[pull]
	default = current

[browser "gitscm"]
	cmd = /bin/sh -c 'open http://git-scm.com/docs/$(basename $1 .html)' --
	protocol = https

[web]
	browser = google-chrome

[github]
	user = 
	token = 